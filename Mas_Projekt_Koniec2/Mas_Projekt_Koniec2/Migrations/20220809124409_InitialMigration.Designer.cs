// <auto-generated />
using System;
using Mas_Final_Project;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mas_Final_Project.Migrations
{
    [DbContext(typeof(MasDBContext))]
    [Migration("20220809124409_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DoctorProcedure", b =>
                {
                    b.Property<long>("DoctorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("EntitlementsId")
                        .HasColumnType("bigint");

                    b.HasKey("DoctorsId", "EntitlementsId");

                    b.HasIndex("EntitlementsId");

                    b.ToTable("DoctorProcedure");

                    b.HasData(
                        new
                        {
                            DoctorsId = 1L,
                            EntitlementsId = 1L
                        },
                        new
                        {
                            DoctorsId = 1L,
                            EntitlementsId = 2L
                        },
                        new
                        {
                            DoctorsId = 1L,
                            EntitlementsId = 4L
                        },
                        new
                        {
                            DoctorsId = 2L,
                            EntitlementsId = 1L
                        },
                        new
                        {
                            DoctorsId = 2L,
                            EntitlementsId = 2L
                        },
                        new
                        {
                            DoctorsId = 2L,
                            EntitlementsId = 4L
                        },
                        new
                        {
                            DoctorsId = 3L,
                            EntitlementsId = 1L
                        });
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OperationalTeamId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationalTeamId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Employee");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employee");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Hospitalization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("HospitalizationEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HospitalizationStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("HospitalizationState")
                        .HasColumnType("int");

                    b.Property<long>("OperationalTeamId")
                        .HasColumnType("bigint");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OperationalTeamId");

                    b.HasIndex("PatientId");

                    b.ToTable("Hospitalization");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.HospitalizationProcedure", b =>
                {
                    b.Property<long>("ProcedureId")
                        .HasColumnType("bigint");

                    b.Property<long>("HospitalizationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("ProcedureId", "HospitalizationId", "ExecutionDate")
                        .HasName("HospitalizationProcedure_pk");

                    b.HasIndex("HospitalizationId");

                    b.ToTable("HospitalizationProcedure");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.MedicalPackage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("MedicalPackage");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PackageName = "MedPack"
                        });
                });

            modelBuilder.Entity("Mas_Final_Project.Models.MedicalPackageProcedure", b =>
                {
                    b.Property<long>("MedicalPackageId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProcedureId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MedicalPackageId", "ProcedureId")
                        .HasName("MedicalPackageProcedure_pk");

                    b.HasIndex("ProcedureId");

                    b.ToTable("MedicalPackageProcedure");

                    b.HasData(
                        new
                        {
                            MedicalPackageId = 1L,
                            ProcedureId = 1L,
                            AssignmentDate = new DateTime(2020, 8, 8, 3, 3, 3, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalPackageId = 1L,
                            ProcedureId = 2L,
                            AssignmentDate = new DateTime(2019, 8, 8, 3, 3, 3, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Mas_Final_Project.Models.OperationalTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("OperationalTeam");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("HealthInsurance")
                        .HasColumnType("bit");

                    b.Property<long?>("MedicalPackageId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MedicalPackageId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            HealthInsurance = false,
                            MedicalPackageId = 1L,
                            PersonId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            HealthInsurance = true,
                            MedicalPackageId = 1L,
                            PersonId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            HealthInsurance = false,
                            PersonId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            HealthInsurance = true,
                            PersonId = 6L
                        },
                        new
                        {
                            Id = 5L,
                            HealthInsurance = false,
                            MedicalPackageId = 1L,
                            PersonId = 7L
                        },
                        new
                        {
                            Id = 6L,
                            HealthInsurance = true,
                            MedicalPackageId = 1L,
                            PersonId = 8L
                        });
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeselNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BirthDate = new DateTime(1997, 8, 8, 20, 20, 20, 0, DateTimeKind.Unspecified),
                            EmailAddress = "aPodlaski@gmail.com",
                            FirstName = "Adam",
                            HomeAddress = "Warszawa",
                            LastName = "Podlaski",
                            PeselNumber = "97080812345",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 2L,
                            BirthDate = new DateTime(1997, 5, 18, 12, 20, 30, 0, DateTimeKind.Unspecified),
                            EmailAddress = "mPietras@gmail.com",
                            FirstName = "Mateusz",
                            HomeAddress = "Kaski",
                            LastName = "Pietras",
                            PeselNumber = "97051812345",
                            PhoneNumber = "113456789"
                        },
                        new
                        {
                            Id = 3L,
                            BirthDate = new DateTime(1997, 8, 5, 10, 10, 10, 0, DateTimeKind.Unspecified),
                            EmailAddress = "jachoStera@gmail.com",
                            FirstName = "Jan",
                            HomeAddress = "Piastów",
                            LastName = "Kostera",
                            PeselNumber = "97080512345",
                            PhoneNumber = "123156789"
                        },
                        new
                        {
                            Id = 4L,
                            BirthDate = new DateTime(1997, 8, 8, 2, 2, 2, 0, DateTimeKind.Unspecified),
                            EmailAddress = "kPlac@gmail.com",
                            FirstName = "Karol",
                            HomeAddress = "Warszawa",
                            LastName = "Plac",
                            PeselNumber = "97080814345",
                            PhoneNumber = "123454789"
                        },
                        new
                        {
                            Id = 5L,
                            BirthDate = new DateTime(1997, 8, 8, 3, 3, 3, 0, DateTimeKind.Unspecified),
                            EmailAddress = "wWaldzki@gmail.com",
                            FirstName = "Waldemar",
                            HomeAddress = "Warszawa",
                            LastName = "Waldzki",
                            PeselNumber = "97080818345",
                            PhoneNumber = "123458789"
                        },
                        new
                        {
                            Id = 6L,
                            BirthDate = new DateTime(1997, 8, 8, 2, 3, 3, 0, DateTimeKind.Unspecified),
                            EmailAddress = "BediMaciej@gmail.com",
                            FirstName = "Maciej",
                            HomeAddress = "Warszawa",
                            LastName = "Bedi",
                            PeselNumber = "97080818645",
                            PhoneNumber = "123458769"
                        },
                        new
                        {
                            Id = 7L,
                            BirthDate = new DateTime(1997, 8, 9, 3, 3, 3, 0, DateTimeKind.Unspecified),
                            EmailAddress = "RomaNKocz@gmail.com",
                            FirstName = "Roman",
                            HomeAddress = "Grodzisk Mazowiecki",
                            LastName = "Koczan",
                            PeselNumber = "97080919345",
                            PhoneNumber = "123458999"
                        },
                        new
                        {
                            Id = 8L,
                            BirthDate = new DateTime(1990, 8, 8, 3, 3, 3, 0, DateTimeKind.Unspecified),
                            EmailAddress = "TymnoGold@gmail.com",
                            FirstName = "Tymon",
                            HomeAddress = "Piastów",
                            LastName = "Gołda",
                            PeselNumber = "90080818345",
                            PhoneNumber = "120058789"
                        });
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Procedure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("IsOperationalTeamNeeded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcedureInvasive")
                        .HasColumnType("bit");

                    b.Property<int>("ProcedureCost")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Procedure");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsOperationalTeamNeeded = false,
                            IsProcedureInvasive = false,
                            ProcedureCost = 20,
                            ProcedureName = "Badanie kontrolne"
                        },
                        new
                        {
                            Id = 2L,
                            IsOperationalTeamNeeded = true,
                            IsProcedureInvasive = true,
                            ProcedureCost = 10000,
                            ProcedureName = "Operacja serca"
                        },
                        new
                        {
                            Id = 3L,
                            IsOperationalTeamNeeded = false,
                            IsProcedureInvasive = true,
                            ProcedureCost = 50,
                            ProcedureName = "Badanie krwi"
                        },
                        new
                        {
                            Id = 4L,
                            IsOperationalTeamNeeded = false,
                            IsProcedureInvasive = false,
                            ProcedureCost = 140,
                            ProcedureName = "Usg Serca"
                        });
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Visit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("DoctorId")
                        .HasColumnType("bigint");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProcedureId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("VisitEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VisitStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("VisitState")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Doctor", b =>
                {
                    b.HasBaseType("Mas_Final_Project.Models.Employee");

                    b.Property<string>("DoctorSpecialization")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasDiscriminator().HasValue("Doctor");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PersonId = 4L,
                            Salary = 3400,
                            DoctorSpecialization = "Cardiologist"
                        },
                        new
                        {
                            Id = 2L,
                            PersonId = 5L,
                            Salary = 3400,
                            DoctorSpecialization = "Cardiologist"
                        },
                        new
                        {
                            Id = 3L,
                            PersonId = 2L,
                            Salary = 3300,
                            DoctorSpecialization = "Laryngologist"
                        });
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Nurse", b =>
                {
                    b.HasBaseType("Mas_Final_Project.Models.Employee");

                    b.Property<string>("NurseSpacialization")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasDiscriminator().HasValue("Nurse");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Orderly", b =>
                {
                    b.HasBaseType("Mas_Final_Project.Models.Employee");

                    b.Property<bool>("DoesSupportFunctions")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Orderly");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Receptionist", b =>
                {
                    b.HasBaseType("Mas_Final_Project.Models.Employee");

                    b.Property<string>("AdditionalLanguage")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasDiscriminator().HasValue("Receptionist");
                });

            modelBuilder.Entity("DoctorProcedure", b =>
                {
                    b.HasOne("Mas_Final_Project.Models.Doctor", null)
                        .WithMany()
                        .HasForeignKey("DoctorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Final_Project.Models.Procedure", null)
                        .WithMany()
                        .HasForeignKey("EntitlementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Employee", b =>
                {
                    b.HasOne("Mas_Final_Project.Models.OperationalTeam", null)
                        .WithMany("Employees")
                        .HasForeignKey("OperationalTeamId");

                    b.HasOne("Mas_Final_Project.Models.Person", "Person")
                        .WithOne("Employee")
                        .HasForeignKey("Mas_Final_Project.Models.Employee", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Hospitalization", b =>
                {
                    b.HasOne("Mas_Final_Project.Models.OperationalTeam", "OperationalTeam")
                        .WithMany("Hospitalizations")
                        .HasForeignKey("OperationalTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Final_Project.Models.Patient", "Patient")
                        .WithMany("Hospitalizations")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationalTeam");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.HospitalizationProcedure", b =>
                {
                    b.HasOne("Mas_Final_Project.Models.Hospitalization", "Hospitalization")
                        .WithMany("Procedures")
                        .HasForeignKey("HospitalizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Final_Project.Models.Procedure", "Procedure")
                        .WithMany("Hospitalizations")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hospitalization");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.MedicalPackageProcedure", b =>
                {
                    b.HasOne("Mas_Final_Project.Models.MedicalPackage", "MedicalPackage")
                        .WithMany("Procedures")
                        .HasForeignKey("MedicalPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Final_Project.Models.Procedure", "Procedure")
                        .WithMany("MedicalPackages")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalPackage");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Patient", b =>
                {
                    b.HasOne("Mas_Final_Project.Models.MedicalPackage", "MedicalPackage")
                        .WithMany("Patients")
                        .HasForeignKey("MedicalPackageId");

                    b.HasOne("Mas_Final_Project.Models.Person", "Person")
                        .WithOne("Patient")
                        .HasForeignKey("Mas_Final_Project.Models.Patient", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalPackage");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Visit", b =>
                {
                    b.HasOne("Mas_Final_Project.Models.Doctor", "Doctor")
                        .WithMany("Visits")
                        .HasForeignKey("DoctorId");

                    b.HasOne("Mas_Final_Project.Models.Patient", "Patient")
                        .WithMany("Visits")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Final_Project.Models.Procedure", "Procedure")
                        .WithMany("Visits")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Hospitalization", b =>
                {
                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.MedicalPackage", b =>
                {
                    b.Navigation("Patients");

                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.OperationalTeam", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Hospitalizations");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Patient", b =>
                {
                    b.Navigation("Hospitalizations");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Person", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Procedure", b =>
                {
                    b.Navigation("Hospitalizations");

                    b.Navigation("MedicalPackages");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Mas_Final_Project.Models.Doctor", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
