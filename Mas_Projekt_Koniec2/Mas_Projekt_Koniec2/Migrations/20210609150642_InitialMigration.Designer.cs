// <auto-generated />
using System;
using Mas_Projekt_Koniec2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mas_Projekt_Koniec2.Migrations
{
    [DbContext(typeof(MasDBContext))]
    [Migration("20210609150642_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Hospitalizacja", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("KoniecHospitalizacji")
                        .HasColumnType("datetime2");

                    b.Property<long>("PacjentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PoczatekHospitalizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("ZespolOperacyjnyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PacjentId");

                    b.HasIndex("ZespolOperacyjnyId");

                    b.ToTable("Hospitalizacja");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.HospitalizacjaProcedura", b =>
                {
                    b.Property<long>("ProceduraId")
                        .HasColumnType("bigint");

                    b.Property<long>("HospitalizacjaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataWykonania")
                        .HasColumnType("datetime2");

                    b.HasKey("ProceduraId", "HospitalizacjaId", "DataWykonania")
                        .HasName("PakietMedycznyProcedura_pk");

                    b.HasIndex("HospitalizacjaId");

                    b.ToTable("HospitalizacjaProcedura");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Osoba", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdresZamieszkania")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumerTelefonu")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Osoba");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Pacjent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("OsobaId")
                        .HasColumnType("bigint");

                    b.Property<long>("PakietMedycznyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("UbezpiecznieZdrowotne")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OsobaId");

                    b.HasIndex("PakietMedycznyId");

                    b.ToTable("Pacjent");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.PakietMedyczny", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("PakietMedyczny");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.PakietMedycznyProcedura", b =>
                {
                    b.Property<long>("PakietMedycznyId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProceduraId")
                        .HasColumnType("bigint");

                    b.HasKey("PakietMedycznyId", "ProceduraId")
                        .HasName("PakietMedycznyProcedura_pk");

                    b.HasIndex("ProceduraId");

                    b.ToTable("PakietMedycznyProcedura");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Pracownik", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OsobaId")
                        .HasColumnType("bigint");

                    b.Property<int>("Pensja")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OsobaId")
                        .IsUnique();

                    b.ToTable("Pracownik");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pracownik");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Procedura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CzyPotrzebnyZespolOperacyjny")
                        .HasColumnType("bit");

                    b.Property<bool>("CzyProceduraInwazyjna")
                        .HasColumnType("bit");

                    b.Property<int>("Koszt")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Procedura");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Wizyta", b =>
                {
                    b.Property<long>("PacjentId")
                        .HasColumnType("bigint");

                    b.Property<long>("DoktorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PoczatekWizyty")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KoniecWizyty")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProceduraId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PacjentId", "DoktorId", "PoczatekWizyty")
                        .HasName("PakietMedycznyProcedura_pk");

                    b.HasIndex("DoktorId");

                    b.HasIndex("ProceduraId");

                    b.ToTable("Wizyta");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.ZespolOperacyjny", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ZespolOperacyjny");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Doktor", b =>
                {
                    b.HasBaseType("Mas_Projekt_Koniec2.Models.Pracownik");

                    b.Property<string>("Specjalizacja")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Doktor_Specjalizacja");

                    b.Property<long>("ZespolOperacyjnyId")
                        .HasColumnType("bigint")
                        .HasColumnName("Doktor_ZespolOperacyjnyId");

                    b.HasIndex("ZespolOperacyjnyId");

                    b.HasDiscriminator().HasValue("Doktor");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Pielegniarz", b =>
                {
                    b.HasBaseType("Mas_Projekt_Koniec2.Models.Pracownik");

                    b.Property<string>("Specjalizacja")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<long>("ZespolOperacyjnyId")
                        .HasColumnType("bigint");

                    b.HasIndex("ZespolOperacyjnyId");

                    b.HasDiscriminator().HasValue("Pielegniarz");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Recepcjonista", b =>
                {
                    b.HasBaseType("Mas_Projekt_Koniec2.Models.Pracownik");

                    b.HasDiscriminator().HasValue("Recepcjonista");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Salowy", b =>
                {
                    b.HasBaseType("Mas_Projekt_Koniec2.Models.Pracownik");

                    b.Property<long>("ZespolOperacyjnyId")
                        .HasColumnType("bigint")
                        .HasColumnName("Salowy_ZespolOperacyjnyId");

                    b.HasIndex("ZespolOperacyjnyId");

                    b.HasDiscriminator().HasValue("Salowy");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Hospitalizacja", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.Pacjent", "Pacjent")
                        .WithMany("Hospitalizacja")
                        .HasForeignKey("PacjentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Projekt_Koniec2.Models.ZespolOperacyjny", "ZespolOperacyjny")
                        .WithMany("Hospitalizacje")
                        .HasForeignKey("ZespolOperacyjnyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacjent");

                    b.Navigation("ZespolOperacyjny");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.HospitalizacjaProcedura", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.Hospitalizacja", "Hospitalizacja")
                        .WithMany("Procedury")
                        .HasForeignKey("HospitalizacjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Projekt_Koniec2.Models.Procedura", "Procedura")
                        .WithMany("Hospitalizacje")
                        .HasForeignKey("ProceduraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hospitalizacja");

                    b.Navigation("Procedura");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Pacjent", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.Osoba", "Osoba")
                        .WithMany()
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Projekt_Koniec2.Models.PakietMedyczny", "PakietMedyczny")
                        .WithMany("Pacjenci")
                        .HasForeignKey("PakietMedycznyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osoba");

                    b.Navigation("PakietMedyczny");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.PakietMedycznyProcedura", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.PakietMedyczny", "PakietMedyczny")
                        .WithMany("Procedury")
                        .HasForeignKey("PakietMedycznyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Projekt_Koniec2.Models.Procedura", "Procedura")
                        .WithMany("PakietyMedyczne")
                        .HasForeignKey("ProceduraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PakietMedyczny");

                    b.Navigation("Procedura");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Pracownik", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.Osoba", "Osoba")
                        .WithOne("Pracownik")
                        .HasForeignKey("Mas_Projekt_Koniec2.Models.Pracownik", "OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osoba");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Wizyta", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.Doktor", "Doktor")
                        .WithMany("Wizyty")
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Projekt_Koniec2.Models.Pacjent", "Pacjent")
                        .WithMany("Wizyty")
                        .HasForeignKey("PacjentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Projekt_Koniec2.Models.Procedura", "Procedura")
                        .WithMany("Wizyty")
                        .HasForeignKey("ProceduraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");

                    b.Navigation("Pacjent");

                    b.Navigation("Procedura");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Doktor", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.ZespolOperacyjny", "Czlonek")
                        .WithMany("Doktorzy")
                        .HasForeignKey("ZespolOperacyjnyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Czlonek");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Pielegniarz", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.ZespolOperacyjny", "Czlonek")
                        .WithMany("Pielegniarze")
                        .HasForeignKey("ZespolOperacyjnyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Czlonek");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Salowy", b =>
                {
                    b.HasOne("Mas_Projekt_Koniec2.Models.ZespolOperacyjny", "Czlonek")
                        .WithMany("Salowi")
                        .HasForeignKey("ZespolOperacyjnyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Czlonek");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Hospitalizacja", b =>
                {
                    b.Navigation("Procedury");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Osoba", b =>
                {
                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Pacjent", b =>
                {
                    b.Navigation("Hospitalizacja");

                    b.Navigation("Wizyty");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.PakietMedyczny", b =>
                {
                    b.Navigation("Pacjenci");

                    b.Navigation("Procedury");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Procedura", b =>
                {
                    b.Navigation("Hospitalizacje");

                    b.Navigation("PakietyMedyczne");

                    b.Navigation("Wizyty");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.ZespolOperacyjny", b =>
                {
                    b.Navigation("Doktorzy");

                    b.Navigation("Hospitalizacje");

                    b.Navigation("Pielegniarze");

                    b.Navigation("Salowi");
                });

            modelBuilder.Entity("Mas_Projekt_Koniec2.Models.Doktor", b =>
                {
                    b.Navigation("Wizyty");
                });
#pragma warning restore 612, 618
        }
    }
}
